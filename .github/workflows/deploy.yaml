name: Deploy Canisters

on:
  push:
    branches:
      - main # Adjust to your deployment branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Install DFINITY SDK (dfx) using setup-dfx action
      - name: Install dfx
        uses: dfinity/setup-dfx@main
        with:
          dfx-version: "0.14.2" # Specify the version you want, or use "latest"

      # Step 3: Authenticate with Existing Identity
      - name: Authenticate with Existing Identity
        run: |
          echo "${{ secrets.DFX_IDENTITY }}" > identity.pem
          dfx identity import --force github_identity < identity.pem || true
          dfx identity use github_identity || true
        env:
          DFX_IDENTITY: ${{ secrets.DFX_IDENTITY }}

      # Step 4: Configure Wallet (replace <wallet_id> with your actual wallet ID)
      - name: Configure Wallet
        run: |
          dfx identity set-wallet <opyr4-skhvh-gls2k-m2khd-peng6-uye6p-qdade-dlbe5-76jlr-cwdnm-uqe> --network ic || true  # Replace <wallet_id> with your actual wallet ID

      # Step 5: Create Canisters
      - name: Create Canisters
        run: |
          dfx canister create main || true


      # Step 6: Build and Deploy Canisters
      - name: Build and Deploy Canisters
        run: |
          dfx build || true
          dfx deploy --network ic || true

      # Step 7: Retrieve Canister IDs and Save to File
      - name: Retrieve Canister IDs
        run: |
          echo â€œRound Robin ID:" > canister_ids.txt 
          dfx canister id main >> canister_ids.txt || true


      # Step 8: Upload Canister IDs as an Artifact using v4 of upload-artifact action
      - name: Upload Canister IDs Artifact
        uses: actions/upload-artifact@v4  # Updated to v4
        with:
          name: canister-ids
          path: canister_ids.txt  
